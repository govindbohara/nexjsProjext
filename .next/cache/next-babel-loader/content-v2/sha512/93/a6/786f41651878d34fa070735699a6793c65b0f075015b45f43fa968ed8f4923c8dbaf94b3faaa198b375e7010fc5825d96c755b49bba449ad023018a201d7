{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/gole/programming/nextjs/biggerProject/pages/[meetupId]/index.js\",\n    _this = this;\n\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\n\nvar MeetupDetails = function MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: props.meetupData.image,\n      title: props.meetupData.title,\n      address: props.meetupData.address,\n      description: props.meetupData.description\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 4\n    }, _this)\n  }, void 0, false);\n};\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["/home/gole/programming/nextjs/biggerProject/pages/[meetupId]/index.js"],"names":["MeetupDetail","MeetupDetails","props","meetupData","image","title","address","description"],"mappings":";;;;;;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,KAAK,EAAI;AAC9B,sBACC;AAAA,2BACC,QAAC,YAAD;AACC,MAAA,KAAK,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KADzB;AAEC,MAAA,KAAK,EAAEF,KAAK,CAACC,UAAN,CAAiBE,KAFzB;AAGC,MAAA,OAAO,EAAEH,KAAK,CAACC,UAAN,CAAiBG,OAH3B;AAIC,MAAA,WAAW,EAAEJ,KAAK,CAACC,UAAN,CAAiBI;AAJ/B;AAAA;AAAA;AAAA;AAAA;AADD,mBADD;AAUA,CAXD;;KAAMN,a;;AAgDN,eAAeA,aAAf","sourcesContent":["import MeetupDetail from '../../components/meetups/MeetupDetail';\nimport { MongoClient, ObjectId } from 'mongodb';\nconst MeetupDetails = props => {\n\treturn (\n\t\t<>\n\t\t\t<MeetupDetail\n\t\t\t\timage={props.meetupData.image}\n\t\t\t\ttitle={props.meetupData.title}\n\t\t\t\taddress={props.meetupData.address}\n\t\t\t\tdescription={props.meetupData.description}\n\t\t\t/>\n\t\t</>\n\t);\n};\nexport const getStaticPaths = async () => {\n\tconst client = await MongoClient.connect(\n\t\t'mongodb+srv://gole:gole@cluster0.auso7.mongodb.net/meetups?retryWrites=true&w=majority'\n\t);\n\tconst db = client.db();\n\tconst meetupCollection = db.collection('meetup');\n\tconst meetups = await meetupCollection.find({}, { _id: 1 }).toArray();\n\tclient.close();\n\n\treturn {\n\t\tfallback: false,\n\t\tpaths: meetups.map(meetup => ({\n\t\t\tparams: { meetupId: meetup._id.toString() },\n\t\t})),\n\t};\n};\n\nexport const getStaticProps = async context => {\n\t//fetch Data from an API\n\n\tconst meetupID = context.params.meetupId;\n\tconst client = await MongoClient.connect(\n\t\t'mongodb+srv://gole:gole@cluster0.auso7.mongodb.net/meetups?retryWrites=true&w=majority'\n\t);\n\tconst db = client.db();\n\tconst meetupCollection = db.collection('meetup');\n\tconst selectedMeetup = meetupCollection.findOne({ _id: ObjectId(meetupID) });\n\tconsole.log(selectedMeetup);\n\tclient.close();\n\n\treturn {\n\t\tprops: {\n\t\t\tmeetupData: selectedMeetup,\n\t\t},\n\t};\n};\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}