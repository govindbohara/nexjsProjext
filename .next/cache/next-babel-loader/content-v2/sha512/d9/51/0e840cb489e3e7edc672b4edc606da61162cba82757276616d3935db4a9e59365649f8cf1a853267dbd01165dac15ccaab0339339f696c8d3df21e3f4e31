{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/gole/programming/nextjs/biggerProject/pages/[meetupId]/index.js\";\nimport MeetupDetail from '../../components/meetups/MeetupDetail';\nimport { MongoClient } from 'mongodb';\n\nconst MeetupDetails = props => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MeetupDetail, {\n      image: \"https://images.unsplash.com/photo-1655249323557-3d016d11c013?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=765&q=80\",\n      title: \"First Meeting\",\n      address: \"Pepsicola, Kathmandu\",\n      description: \"This is a first meeting\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n\nexport const getStaticPaths = async () => {\n  const client = await MongoClient.connect('mongodb+srv://gole:gole@cluster0.auso7.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupCollection = db.collection('meetup');\n  const meetups = await meetupCollection.find({}, {\n    _id: 1\n  }).toArray();\n  console.log(meetupId);\n  return {\n    fallback: true,\n    paths: meetups.map(meetup => ({\n      params: {\n        me\n      }\n    }))\n  };\n};\nexport const getStaticProps = async context => {\n  //fetch Data from an API\n  const meetupID = context.params.meetupId;\n  console.log(meetupID);\n  return {\n    props: {\n      meetupData: {\n        image: 'https://images.unsplash.com/photo-1655249323557-3d016d11c013?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=765&q=80',\n        title: 'First Meeting',\n        address: 'Pepsicola, Kathmandu',\n        description: 'This is a first meeting',\n        id: meetupID\n      }\n    }\n  };\n};\nexport default MeetupDetails;","map":{"version":3,"sources":["/home/gole/programming/nextjs/biggerProject/pages/[meetupId]/index.js"],"names":["MeetupDetail","MongoClient","MeetupDetails","props","getStaticPaths","client","connect","db","meetupCollection","collection","meetups","find","_id","toArray","console","log","meetupId","fallback","paths","map","meetup","params","me","getStaticProps","context","meetupID","meetupData","image","title","address","description","id"],"mappings":";;;AAAA,OAAOA,YAAP,MAAyB,uCAAzB;AACA,SAASC,WAAT,QAA4B,SAA5B;;AACA,MAAMC,aAAa,GAAGC,KAAK,IAAI;AAC9B,sBACC;AAAA,2BACC,QAAC,YAAD;AACC,MAAA,KAAK,EAAC,+JADP;AAEC,MAAA,KAAK,EAAC,eAFP;AAGC,MAAA,OAAO,EAAC,sBAHT;AAIC,MAAA,WAAW,EAAC;AAJb;AAAA;AAAA;AAAA;AAAA;AADD,mBADD;AAUA,CAXD;;AAYA,OAAO,MAAMC,cAAc,GAAG,YAAY;AACzC,QAAMC,MAAM,GAAG,MAAMJ,WAAW,CAACK,OAAZ,CACpB,wFADoB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AACA,QAAMC,gBAAgB,GAAGD,EAAE,CAACE,UAAH,CAAc,QAAd,CAAzB;AACA,QAAMC,OAAO,GAAG,MAAMF,gBAAgB,CAACG,IAAjB,CAAsB,EAAtB,EAA0B;AAAEC,IAAAA,GAAG,EAAE;AAAP,GAA1B,EAAsCC,OAAtC,EAAtB;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYC,QAAZ;AACA,SAAO;AACNC,IAAAA,QAAQ,EAAE,IADJ;AAENC,IAAAA,KAAK,EAAER,OAAO,CAACS,GAAR,CAAYC,MAAM,KAAK;AAC7BC,MAAAA,MAAM,EAAE;AACPC,QAAAA;AADO;AADqB,KAAL,CAAlB;AAFD,GAAP;AAQA,CAhBM;AAkBP,OAAO,MAAMC,cAAc,GAAG,MAAMC,OAAN,IAAiB;AAC9C;AAEA,QAAMC,QAAQ,GAAGD,OAAO,CAACH,MAAR,CAAeL,QAAhC;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYU,QAAZ;AACA,SAAO;AACNtB,IAAAA,KAAK,EAAE;AACNuB,MAAAA,UAAU,EAAE;AACXC,QAAAA,KAAK,EAAE,+JADI;AAEXC,QAAAA,KAAK,EAAE,eAFI;AAGXC,QAAAA,OAAO,EAAE,sBAHE;AAIXC,QAAAA,WAAW,EAAE,yBAJF;AAKXC,QAAAA,EAAE,EAAEN;AALO;AADN;AADD,GAAP;AAWA,CAhBM;AAiBP,eAAevB,aAAf","sourcesContent":["import MeetupDetail from '../../components/meetups/MeetupDetail';\nimport { MongoClient } from 'mongodb';\nconst MeetupDetails = props => {\n\treturn (\n\t\t<>\n\t\t\t<MeetupDetail\n\t\t\t\timage=\"https://images.unsplash.com/photo-1655249323557-3d016d11c013?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=765&q=80\"\n\t\t\t\ttitle=\"First Meeting\"\n\t\t\t\taddress=\"Pepsicola, Kathmandu\"\n\t\t\t\tdescription=\"This is a first meeting\"\n\t\t\t/>\n\t\t</>\n\t);\n};\nexport const getStaticPaths = async () => {\n\tconst client = await MongoClient.connect(\n\t\t'mongodb+srv://gole:gole@cluster0.auso7.mongodb.net/meetups?retryWrites=true&w=majority'\n\t);\n\tconst db = client.db();\n\tconst meetupCollection = db.collection('meetup');\n\tconst meetups = await meetupCollection.find({}, { _id: 1 }).toArray();\n\tconsole.log(meetupId);\n\treturn {\n\t\tfallback: true,\n\t\tpaths: meetups.map(meetup => ({\n\t\t\tparams: {\n\t\t\t\tme\n\t\t\t}\n\t\t})),\n\t};\n};\n\nexport const getStaticProps = async context => {\n\t//fetch Data from an API\n\n\tconst meetupID = context.params.meetupId;\n\tconsole.log(meetupID);\n\treturn {\n\t\tprops: {\n\t\t\tmeetupData: {\n\t\t\t\timage: 'https://images.unsplash.com/photo-1655249323557-3d016d11c013?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=765&q=80',\n\t\t\t\ttitle: 'First Meeting',\n\t\t\t\taddress: 'Pepsicola, Kathmandu',\n\t\t\t\tdescription: 'This is a first meeting',\n\t\t\t\tid: meetupID,\n\t\t\t},\n\t\t},\n\t};\n};\nexport default MeetupDetails;\n"]},"metadata":{},"sourceType":"module"}